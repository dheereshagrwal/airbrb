{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vohra\\\\OneDrive\\\\Desktop\\\\ass3-master (1)\\\\ass3-master\\\\frontend\\\\src\\\\views\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useNavigate } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emptyUser = {\n  name: \"\",\n  email: \"\",\n  password: \"\"\n};\n\nfunction Register(_ref) {\n  _s();\n\n  let {\n    dispatch\n  } = _ref;\n  const [user, setUser] = useState({ ...emptyUser\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await axios.post(`http://localhost:5005/user/auth/register`, user);\n      console.log(response);\n\n      if (response.status === 200) {\n        dispatch({\n          type: 'SET_USER',\n          user: {\n            email: user.email\n          }\n        });\n      }\n    } catch (err) {\n      console.error(\"dkfjbs\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 15,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          m: 1,\n          bgcolor: 'secondary'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        noValidate: true,\n        sx: {\n          mt: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"name\",\n          label: \"Name\",\n          name: \"name\",\n          autoComplete: \"email\",\n          autoFocus: true,\n          value: user.name,\n          onChange: e => {\n            let a = user;\n            a.name = e.target.value;\n            setUser({ ...a\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"email\",\n          label: \"Email Address\",\n          name: \"email\",\n          autoComplete: \"email\",\n          autoFocus: true,\n          value: user.email,\n          onChange: e => {\n            let a = user;\n            a.email = e.target.value;\n            setUser({ ...a\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"passwod\",\n          label: \"Password\",\n          type: \"password\",\n          id: \"password\" //autoComplete=\"current-password\"\n          ,\n          value: user.password,\n          onChange: e => {\n            let a = user;\n            a.password = e.target.value;\n            setUser({ ...a\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          onClick: e => handleSubmit(e),\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"EW6XJWHgxGKjSk+dinGef2Fhx/s=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/vohra/OneDrive/Desktop/ass3-master (1)/ass3-master/frontend/src/views/Register.js"],"names":["React","useState","useNavigate","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","Typography","Container","axios","emptyUser","name","email","password","Register","dispatch","user","setUser","handleSubmit","e","preventDefault","response","post","console","log","status","type","err","error","marginTop","display","flexDirection","alignItems","m","bgcolor","mt","a","target","value","mb"],"mappings":"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","sourcesContent":["import React, { useState, useNavigate } from 'react'\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport axios from 'axios';\r\n\r\nconst emptyUser = {\r\n    name: \"\",\r\n    email:\"\", \r\n    password: \"\",\r\n}\r\n\r\nfunction Register({ dispatch }) {\r\n    const [user, setUser] = useState({...emptyUser});\r\n\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post(`http://localhost:5005/user/auth/register`, user);\r\n            console.log(response);\r\n            if(response.status===200){\r\n              dispatch(\r\n                {\r\n                  type: 'SET_USER',\r\n                  user: { email: user.email },\r\n                }\r\n              )\r\n\r\n            }\r\n\r\n          } catch(err) {\r\n            console.error(\"dkfjbs\");\r\n          }\r\n    }\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <Box\r\n                sx={{\r\n                    marginTop: 15,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                }}\r\n            >\r\n                <Avatar sx={{ m: 1, bgcolor: 'secondary' }}>\r\n                    {/* <LockOutlinedIcon /> */}\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Register\r\n                </Typography>\r\n                <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"name\"\r\n                        label=\"Name\"\r\n                        name=\"name\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        value={user.name}\r\n                        onChange={(e)=>{\r\n                            let a = user;\r\n                            a.name = e.target.value;\r\n                            setUser({...a})\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        value={user.email}\r\n                        onChange={(e)=>{\r\n                            let a = user;\r\n                            a.email = e.target.value;\r\n                            setUser({...a})\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"passwod\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        //autoComplete=\"current-password\"\r\n                        value={user.password}\r\n                        onChange={(e)=>{\r\n                            let a = user;\r\n                            a.password = e.target.value;\r\n                            setUser({...a})\r\n                        }}\r\n                    />\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        sx={{ mt: 3, mb: 2 }}\r\n                        onClick={(e)=>handleSubmit(e)}\r\n                    >\r\n                        Register\r\n                    </Button>\r\n\r\n                </Box>\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Register\r\n"]},"metadata":{},"sourceType":"module"}